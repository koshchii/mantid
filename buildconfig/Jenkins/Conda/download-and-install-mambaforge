#!/bin/bash -ex

# This script will download and install mambaforge if it's not present where expected
#
# Expected args:
#   1. EXPECTED_MAMBAFORGE_PATH: path to where mambaforge should be installed
#   2. EXPECTED_CONDA_PATH: path to the conda executable
#   3. CLEAN_BUILD: whether or not to force mambaforge to be removed before attempting to install it again

EXPECTED_MAMBAFORGE_PATH=$1
EXPECTED_CONDA_PATH=$2
CLEAN_BUILD=$3
MAMBAFORGE_VERSION=4.11.0-0

# Only supporting x86_64 at this time for the build process
if [[ $OSTYPE == 'msys'* ]]; then
    MAMBAFORGE_SCRIPT_NAME=Mambaforge-$MAMBAFORGE_VERSION-Windows-x86_64.exe
else
    MAMBAFORGE_SCRIPT_NAME=Mambaforge-$MAMBAFORGE_VERSION-$(uname)-x86_64.sh
fi
URL=https://github.com/conda-forge/miniforge/releases/latest/download/$MAMBAFORGE_SCRIPT_NAME

if [[ $CLEAN_BUILD  == true ]]; then
    rm -rf $EXPECTED_MAMBAFORGE_PATH
    if [[ -f $MAMBAFORGE_SCRIPT_NAME ]]; then
        rm $MAMBAFORGE_SCRIPT_NAME
    fi
fi

# Ensure conda is installed
if [[ ! -f $EXPECTED_CONDA_PATH ]]; then
    if [[ ! -f $MAMBAFORGE_SCRIPT_NAME ]]; then
        # Download mambaforge
        if [ -x "$(which curl)" ]; then
            curl -L -O $URL
        elif [ -x "$(which wget)" ] ; then
            wget $URL
        else
            echo "Could not download Conda as wget and curl are not installed."
            exit 1
        fi
    fi
    if [[ $OSTYPE == 'msys'* ]]; then
        # Replace all / with \ for windows batch support before passing in $EXPECTED_MAMBAFORGE_PATH
        cmd.exe /C "START /wait "" $MAMBAFORGE_SCRIPT_NAME /InstallationType=JustMe /RegisterPython=0 /S /D=${EXPECTED_MAMBAFORGE_PATH////\\}"
    else
        bash $MAMBAFORGE_SCRIPT_NAME -b -p $EXPECTED_MAMBAFORGE_PATH
    fi
    rm $MAMBAFORGE_SCRIPT_NAME
fi
